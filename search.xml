<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title></title>
      <link href="2021/01/03/ru-he-tian-jia-typora-xin-zhu-ti/"/>
      <url>2021/01/03/ru-he-tian-jia-typora-xin-zhu-ti/</url>
      
        <content type="html"><![CDATA[<h3 id="如何添加-Typora-新主题"><a href="#如何添加-Typora-新主题" class="headerlink" title="如何添加 Typora 新主题?"></a>如何添加 Typora 新主题?</h3><p>Typora 有默认的几个主题，但是我们就是贪得无厌，想要更多的主题怎么办？</p><p>首先我们要去主题官网选择喜欢的主题：</p><p><a href="http://theme.typora.io/">http://theme.typora.io/</a></p><p><img src="http://tonydon.club/wp-content/files/images/markdown/typoraThemes/image-20201112152542712.png" alt="image-20201112152542712"></p><p>这里我们随便选一个主题，点击主题</p><p><img src="http://tonydon.club/wp-content/files/images/markdown/typoraThemes/image-20201112152642063.png" alt="image-20201112152642063"></p><p>在这里我们可以预览主题的样式，点击 <code>Download</code> 按钮会跳转至该主题的 <code>Github</code> 下载地址</p><p><img src="http://tonydon.club/wp-content/files/images/markdown/typoraThemes/image-20201112152825279.png" alt="image-20201112152825279"></p><p>选择第一个即可下载，下载之后找个地方解压文件，解压之后打开文件的内容如下：</p><p><img src="http://tonydon.club/wp-content/files/images/markdown/typoraThemes/image-20201112153007660.png" alt="image-20201112153007660"></p><p>我们只需要关注红色框选中的 <code>.css</code> 文件，其他的都不用管。如何我们打开 <code>Typora</code> ，选择偏好设置</p><p><img src="http://tonydon.club/wp-content/files/images/markdown/typoraThemes/image-20201112153536028.png" alt="image-20201112153536028"></p><p>点击 <strong>打开主题文件夹</strong> </p><p><img src="http://tonydon.club/wp-content/files/images/markdown/typoraThemes/image-20201112153629083.png" alt="image-20201112153629083"></p><p>将刚才红色框选中的几个 <code>.css</code> 文件复制到该文件夹中</p><p><img src="http://tonydon.club/wp-content/files/images/markdown/typoraThemes/image-20201112153747479.png" alt="image-20201112153747479"></p><p>然后重启 <code>Typora</code> 软件，就可以在主题中修改主题了！</p><p><img src="http://tonydon.club/wp-content/files/images/markdown/typoraThemes/image-20201112153841744.png" alt="image-20201112153841744"></p><blockquote><p>感谢阅读！</p><p>个人博客：<a href="http://tonydon.club/">http://tonydon.club/</a></p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="2021/01/03/wordpress-zhong-md-wen-zhang-tian-jia-tu-pian-dian-ji-fang-da-xiao-guo/"/>
      <url>2021/01/03/wordpress-zhong-md-wen-zhang-tian-jia-tu-pian-dian-ji-fang-da-xiao-guo/</url>
      
        <content type="html"><![CDATA[<h2 id="Wordpress中Md文章添加图片点击放大效果"><a href="#Wordpress中Md文章添加图片点击放大效果" class="headerlink" title="Wordpress中Md文章添加图片点击放大效果"></a>Wordpress中Md文章添加图片点击放大效果</h2><p>在 Wordpress 中写文章我更喜欢使用 Markdown 语法写文章，轻松方便。所以我装了 <code>WP Editor.md</code> 这个插件，它可以让我们在 Wordpress 中用 Markdown 写文章</p><p><img src="http://tonydon.club/wp-content/files/images/markdown/wpimgclicktobig/screenshot-1.png" alt="screenshot-1"></p><p>我在 Typora 中写好文章之后，直接粘贴到 Wordpress 中，就可以直接发布文章了。</p><p>在 Markdown 中插入图片的语法为：</p><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown"><span class="token url"><span class="token operator">!</span>[<span class="token content">baidu</span>](<span class="token url">https://www.baidu.com/img/bd_logo1.png</span>)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>直接将其复制到 Wordpress 中，虽然图片可以显示，但是不能点击进行放大。对于一些尺寸比较大的图片来说，图片会被压缩，看起来不清楚。后来我想给图片添加点击放大的功能。</p><p>上网查阅，安装了 <code>Responsive Lightbox &amp; Gallery</code> 这个插件，可以添加图片灯箱效果</p><p><img src="http://tonydon.club/wp-content/files/images/markdown/wpimgclicktobig/banner-772x250.jpg" alt="banner-772x250"></p><p>不过插件默认是英文的，操作起来不是很友好，上网查阅在 <code>https://wpfanyi.com/</code> 网站找到了该插件的汉化包</p><blockquote><p>以下内容转自 <a href="https://wpfanyi.com/plugins/responsive-lightbox">https://wpfanyi.com/plugins/responsive-lightbox</a></p></blockquote><p>通过 FTP 手动上传该汉化包</p><p>点击下载 <a href="https://wpfanyi.com/glotpress/bulk-export/responsive-lightbox/">responsive-lightbox-zh_CN.zip</a> 即最新版的 Responsive Lightbox &amp; Gallery 响应式灯箱画廊 中文语言包，解压后可得到两个文件，</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup">responsive-lightbox-zh_CN.poresponsive-lightbox-zh_CN.mo<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>请上传到您网站的安装目录，路径为</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup">/wp-content/languages/plugins<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这是基于 WordPress 的系统语言路径，注意，要能正常使用，需要看下语言文件是否正确，文件名必须是 <code>responsive-lightbox-zh_CN.mo</code> 才行。</p><p>如下，上传后的完整路径。</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup">/wp-content/languages/plugins/responsive-lightbox-zh_CN.mo<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>操作完毕后，到网站后台的 <code>Responsive Lightbox &amp; Gallery</code> 响应式灯箱画廊 设置页面刷新即可看见变化。</p><hr><p>安装好插件之后却发现图片还是无法点击放大，后来仔细观察发现，想让图片可以点击放大，你的图片要包含在一个 <code>&lt;a&gt;</code> 标签内，且链接地址是图片源地址才行，如下：</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span>  <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://www.baidu.com/img/bd_logo1.png<span class="token punctuation">"</span></span> <span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://www.baidu.com/img/bd_logo1.png<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>而 Markdown 中的图片语法会自动转成如下内容：</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://www.baidu.com/img/bd_logo1.png<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>baidu<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>那这样该怎么办呢？我们可以给图片嵌套一个超链接，如下：</p><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown"><span class="token url">[<span class="token content">![baidu</span>](<span class="token url">https://www.baidu.com/img/bd_logo1.png</span>)</span>](https://www.baidu.com/img/bd_logo1.png)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这样就会自动生成符合要求的 HTML 内容了。我们将图片修改好回到 Wordpress 中，发现图片确实可以点击放大了 </p><p><img src="http://tonydon.club/wp-content/files/images/markdown/wpimgclicktobig/image-20201121191225587.png" alt="image-20201121191225587"></p><p>而且图片的替代文字 <code>baidu</code> 也在下面下面显示出来了，不过这个横条好像去不掉（也可能是我不会关）有时候还是很影响查看图片的，所以干脆就不加替代文字</p><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown"><span class="token url">[<span class="token content">![</span>](<span class="token url">https://www.baidu.com/img/bd_logo1.png</span>)</span>](https://www.baidu.com/img/bd_logo1.png)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这样图片就没有下面一个横条了，看起来也舒服多了</p><p><img src="http://tonydon.club/wp-content/files/images/markdown/wpimgclicktobig/image-20201121191951517.png" alt="image-20201121191951517"></p><p>至此在 Wordpress 中 Md 文章添加图片点击放大效果也完成了。</p><p>不过有时候一篇文章里有很多图片，每个图片都这样写未免太过麻烦，所以我用 <code>python</code> 写了一个自动转换程序，只需要将正常写好的  Markdown 文件命名为 <code>dd.md</code> 放到桌面上，运行程序就会自动读取 <code>dd.md</code> 文件，将图片格式通过正则表达式转化后在桌面上生成一个 <code>(转化后)dd.md</code> 文件，图片的格式就被自动修改好了</p><p> <code>python</code> 代码如下，有需要的自取</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> re<span class="token comment"># 修改规则</span><span class="token keyword">def</span> <span class="token function">modify</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># 获取图片源地址</span>    url <span class="token operator">=</span> m<span class="token punctuation">.</span>group<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>      head <span class="token operator">=</span> <span class="token string">'[![]'</span>        <span class="token comment"># 修改后的Markdown语法</span>    <span class="token keyword">return</span> head <span class="token operator">+</span> <span class="token string">'('</span> <span class="token operator">+</span> url <span class="token operator">+</span> <span class="token string">')'</span> <span class="token operator">+</span> <span class="token string">']'</span> <span class="token operator">+</span> <span class="token string">'('</span> <span class="token operator">+</span> url <span class="token operator">+</span> <span class="token string">')'</span>  <span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    <span class="token comment"># 读取的文件名</span>    file_name <span class="token operator">=</span> <span class="token string">"dd.md"</span>    <span class="token comment"># 桌面路径，需要修改为你的桌面路径</span>    desktop <span class="token operator">=</span> <span class="token string">r"C:/Users/你的用户名/Desktop/"</span>    <span class="token comment"># 桌面路径 + 文件名 = 文件路径</span>    path <span class="token operator">=</span> desktop <span class="token operator">+</span> file_name    <span class="token comment"># 以只读，UTF-8编码打开文件</span>    f <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span> <span class="token string">'r'</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span>    <span class="token comment"># 读取文件内容，然后关闭文件</span>    string <span class="token operator">=</span> f<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>    f<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment"># 正则表达式</span>    rule <span class="token operator">=</span> <span class="token string">r'!\[(.*?)\]\((.*?)\)'</span>    <span class="token comment"># 通过正则表达式 rule 和修改规则 modify 来修改文件内容</span>    <span class="token comment"># 返回修改后的文件内容</span>    file_content <span class="token operator">=</span> re<span class="token punctuation">.</span>sub<span class="token punctuation">(</span>rule<span class="token punctuation">,</span> modify<span class="token punctuation">,</span> string<span class="token punctuation">)</span>    <span class="token comment"># 创建转化后的文件路径</span>    path <span class="token operator">=</span> desktop <span class="token operator">+</span> <span class="token string">"(转化后)"</span> <span class="token operator">+</span> file_name    <span class="token comment"># 以只写，UTF-8编码打开文件，没有文件会自动创建新文件</span>    f <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span> <span class="token string">'w'</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span>    <span class="token comment"># 将修改后的内容写入文件，然后关闭文件，打印 OK!</span>    f<span class="token punctuation">.</span>write<span class="token punctuation">(</span>file_content<span class="token punctuation">)</span>    f<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"OK!"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="2021/01/03/python-sheng-cheng-dong-tai-er-wei-ma-myqr-jie-shao/"/>
      <url>2021/01/03/python-sheng-cheng-dong-tai-er-wei-ma-myqr-jie-shao/</url>
      
        <content type="html"><![CDATA[<h3 id="Python生成动态二维码，MyQR介绍"><a href="#Python生成动态二维码，MyQR介绍" class="headerlink" title="Python生成动态二维码，MyQR介绍"></a>Python生成动态二维码，MyQR介绍</h3><h4 id="预览"><a href="#预览" class="headerlink" title="预览"></a>预览</h4><p>MyQR 库非常强大，可以生成各种各样的二维码，像下面这些</p><p>正常的二维码</p><p><img src="http://tonydon.club/wp-content/files/images/markdown/myqr/qrcode.png" alt="qrcode"></p><p>黑白图片二维码（看起来怪怪的）</p><p><img src="http://tonydon.club/wp-content/files/images/markdown/myqr/10_qrcode-1606298681772.png" alt="10_qrcode"></p><p>彩色图片二维码（有点意思）</p><p><img src="http://tonydon.club/wp-content/files/images/markdown/myqr/10_qrcode.png" alt="10_qrcode"></p><p>动态二维码（就是这个感觉！）</p><p><img src="http://tonydon.club/wp-content/files/images/markdown/myqr/cxk_qrcode.gif" alt="cxk_qrcode"></p><h4 id="MyQR介绍"><a href="#MyQR介绍" class="headerlink" title="MyQR介绍"></a>MyQR介绍</h4><p>MyQR 的 Github 地址如下</p><p><a href="https://github.com/sylnsfar/qrcode">https://github.com/sylnsfar/qrcode</a></p><p>可以通过命令行安装 MyQR 库，也可以在PyCharm中之间安装 MyQR 库</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">pip <span class="token function">install</span> myqr<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>安装好库之后，在 Python 程序中第一步导包</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> MyQR <span class="token keyword">import</span> myqr<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后我们只需要调用 <code>myqr.run()</code> 方法，传递给定的参数就能生成指定的二维码。<code>run()</code> 方法的原型如下：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">run<span class="token punctuation">(</span>words<span class="token punctuation">,</span> version<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> level<span class="token operator">=</span><span class="token string">'H'</span><span class="token punctuation">,</span> picture<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> colorized<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> contrast<span class="token operator">=</span><span class="token number">1.0</span><span class="token punctuation">,</span> brightness<span class="token operator">=</span><span class="token number">1.0</span><span class="token punctuation">,</span> save_name<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> save_dir<span class="token operator">=</span>os<span class="token punctuation">.</span>getcwd<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>参数非常多，下面解读一下：</p><table><thead><tr><th>参数</th><th>描述</th><th>默认值</th></tr></thead><tbody><tr><td><code>words</code></td><td>二维码的<strong>内容</strong></td><td>必填，无默认值</td></tr><tr><td><code>version</code></td><td>二维码的边长，单位<strong>非像素</strong></td><td>取决于你输入的信息的长度和使用的纠错等级</td></tr><tr><td><code>level</code></td><td>纠错水平，范围是<strong>L、M、Q、H</strong>，从左到右依次升高。</td><td><code>H</code> 纠错等级最高</td></tr><tr><td><code>picture</code></td><td>二维码的背景图片<strong>路径</strong></td><td><code>None</code>，不采用图片作为背景</td></tr><tr><td><code>colorized</code></td><td>背景图片是否采用<strong>彩色</strong></td><td><code>False</code>，默认采用黑白图片</td></tr><tr><td><code>contrast</code></td><td>调节图片的<strong>对比度</strong></td><td><code>1.0</code> 表示原始图片，更小的值表示更低对比度，更大反之</td></tr><tr><td><code>brightness</code></td><td>调节图片的<strong>亮度</strong></td><td><code>1.0 </code> 表示原始图片，用法同<code> contrast</code></td></tr><tr><td><code>save_name</code></td><td>输出二维码<strong>文件名</strong></td><td><code>&quot;qrcode.png&quot;</code></td></tr><tr><td><code>save_dir</code></td><td>输出<strong>目录</strong></td><td>当前目录</td></tr></tbody></table><p>接下来给大家一个实例，我们就以上面的 cxk 动态二维码举例吧。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> MyQR <span class="token keyword">import</span> myqr<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    <span class="token comment"># 二维码内容</span>    <span class="token comment"># 我选择了一个B站视频：手绘700帧！完美还原蔡徐坤打篮球！鸡你太美~</span>    words <span class="token operator">=</span> <span class="token string">"https://www.bilibili.com/video/BV1sb411t7ps?from=search&amp;seid=13988501635718513150"</span>    <span class="token comment"># 边长控制</span>    version <span class="token operator">=</span> <span class="token number">10</span>    <span class="token comment"># 纠错等级，H 超强纠错</span>    level <span class="token operator">=</span> <span class="token string">'H'</span>    <span class="token comment"># 二维码图片地址</span>    picture <span class="token operator">=</span> <span class="token string">r'E:\test\cxk.gif'</span>    <span class="token comment"># 使用彩色</span>    colorized <span class="token operator">=</span> <span class="token boolean">True</span>    <span class="token comment"># 二维码生成路径</span>    save_path <span class="token operator">=</span> <span class="token string">r"E:\test"</span>    <span class="token comment"># 调用 run 方法，生成二维码</span>    <span class="token comment"># 生成动态二维码时间可能有点长，大家稍等一会</span>    myqr<span class="token punctuation">.</span>run<span class="token punctuation">(</span>words<span class="token operator">=</span>words<span class="token punctuation">,</span>             version<span class="token operator">=</span>version<span class="token punctuation">,</span>             level<span class="token operator">=</span>level<span class="token punctuation">,</span>             picture<span class="token operator">=</span>picture<span class="token punctuation">,</span>             colorized<span class="token operator">=</span>colorized<span class="token punctuation">,</span>             save_dir<span class="token operator">=</span>save_path<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>感谢阅读！</p><p>个人博客：<a href="http://www.tonydon.club/">http://www.tonydon.club/</a></p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="2021/01/03/hello-world/"/>
      <url>2021/01/03/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
